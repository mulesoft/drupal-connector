<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>automation-credentials.properties</value>
		</property>
	</bean>

	<!-- create-node -->
	<util:map id="createNodeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Title" />
		<entry key="content" value="Hello this is the body content" />
		<entry key="type" value="article" />
	</util:map>

	<!-- delete-node -->
	<util:map id="deleteNodeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Title" />
		<entry key="content" value="Hello this is the body content" />
		<entry key="type" value="article" />
	</util:map>

	<!-- update-node -->
	<util:map id="updateNodeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Title" />
		<entry key="content" value="Hello this is the body content" />
		<entry key="type" value="article" />
		<entry key="titleForUpdate" value="My Updated Title" />
	</util:map>
	
	<!-- read-node -->
	<util:map id="readNodeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Title" />
		<entry key="content" value="Hello this is the body content" />
		<entry key="type" value="article" />
	</util:map>
	
	<!-- update-custom-field-for-node -->
	<util:map id="updateCustomFieldForNodeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Title" />
		<entry key="content" value="Hello this is the body content" />
		<entry key="type" value="article" />
		<entry key="customproperty" value="Hello 123" />
	</util:map>
	
	<!-- craete-comment -->
	<util:map id="createCommentTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Title" />
		<entry key="content" value="Hello this is the body content" />
		<entry key="type" value="article" />
		<entry key="subject" value="Hello 123" />
		<entry key="und" value="abc 123" />
	</util:map>
	
	<!-- count-all-comments -->
	<util:map id="countAllCommentsTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Node Title" />
		<entry key="content" value="My Node content" />
		<entry key="type" value="article" />
		<entry key="comments">
			<list value-type="org.mule.modules.drupal.model.Comment">
				<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
					<constructor-arg index="0" value="My First Comment Subject" />
					<constructor-arg index="1" value="My First Comment" />
				</bean>
				<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
					<constructor-arg index="0" value="My Second Comment Subject" />
					<constructor-arg index="1" value="My Second Comment" />
				</bean>
				<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
					<constructor-arg index="0" value="My Third Comment Subject" />
					<constructor-arg index="1" value="My Third Comment" />
				</bean>
			</list>
		</entry>
	</util:map>
	
	<!-- count-new-comments -->
	<util:map id="countNewCommentsTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Node Title" />
		<entry key="content" value="My Node content" />
		<entry key="type" value="article" />
		<entry key="since" value="#{0}" />
		<entry key="comments">
			<list value-type="org.mule.modules.drupal.model.Comment">
				<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
					<constructor-arg index="0" value="My First Comment Subject" />
					<constructor-arg index="1" value="My First Comment" />
				</bean>
				<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
					<constructor-arg index="0" value="My Second Comment Subject" />
					<constructor-arg index="1" value="My Second Comment" />
				</bean>
				<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
					<constructor-arg index="0" value="My Third Comment Subject" />
					<constructor-arg index="1" value="My Third Comment" />
				</bean>
			</list>
		</entry>
	</util:map>
	
	<!-- get-comments-for-node -->
	<util:map id="getCommentsForNodeTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Node Title" />
		<entry key="content" value="My Node content" />
		<entry key="type" value="article" />
		<entry key="comments">
			<list value-type="org.mule.modules.drupal.model.Comment">
				<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
					<constructor-arg index="0" value="First Comment Subject" />
					<constructor-arg index="1" value="First Comment" />
				</bean>
				<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
					<constructor-arg index="0" value="Second Comment Subject" />
					<constructor-arg index="1" value="Second Comment" />
				</bean>
			</list>
		</entry>
	</util:map>
	
	<!-- delete-comment -->
	<util:map id="deleteCommentTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Node Title" />
		<entry key="content" value="My Node Content" />
		<entry key="type" value="article" />
		<entry key="comment">
			<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
				<constructor-arg index="0" value="My Node Comment Subject" />
				<constructor-arg index="1" value="My Node Comment" />
			</bean>
		</entry>
	</util:map>
	
	<!-- read-comment -->
	<util:map id="readCommentTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Read Node Title" />
		<entry key="content" value="My Read Node Content" />
		<entry key="type" value="article" />
		<entry key="comment">
			<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
				<constructor-arg index="0" value="My Read Node Comment Subject" />
				<constructor-arg index="1" value="My Read Node Comment" />
			</bean>
		</entry>
	</util:map>
	
	<!-- update-comment -->
	<util:map id="updateCommentTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Update Node Title" />
		<entry key="content" value="My Update Node Content" />
		<entry key="type" value="article" />
		<entry key="comment">
			<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
				<constructor-arg index="0" value="My First Update Node Comment Subject" />
				<constructor-arg index="1" value="My First Update Node Comment" />
			</bean>
		</entry>
		<entry key="update">
			<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateComment">
				<constructor-arg index="0" value="My Second Update Node Comment Subject" />
				<constructor-arg index="1" value="My Second Update Node Comment" />
			</bean>
		</entry>
	</util:map>
	
	<!-- create-file -->
	<util:map id="createFileTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="file">
			<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateFile">
				<!-- The name of the file. Can be anything. -->
				<constructor-arg index="0" value="My Image File" />
				<!-- The path of the file relative to the classpath -->
				<constructor-arg index="1" value="images.jpg" />
			</bean>
		</entry>
	</util:map>
	
	<!-- delete-file -->
	<util:map id="deleteFileTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="file">
			<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateFile">
				<!-- The name of the file. Can be anything. -->
				<constructor-arg index="0" value="My Image File To Delete" />
				<!-- The path of the file relative to the classpath -->
				<constructor-arg index="1" value="images.jpg" />
			</bean>
		</entry>
	</util:map>
	
	<!-- read-file -->
	<util:map id="readFileTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="file">
			<bean class="org.mule.modules.drupal.automation.testcases.DrupalTestParent" factory-method="generateFile">
				<!-- The name of the file. Can be anything. -->
				<constructor-arg index="0" value="My Read File Image File" />
				<!-- The path of the file relative to the classpath -->
				<constructor-arg index="1" value="images.jpg" />
			</bean>
		</entry>
	</util:map>
	
	<!-- update-file -->
	<util:map id="updateFileTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="filePath" value="images.jpg" />
		<entry key="fileName" value="My Update File Image File" />
		<entry key="newFileName" value="My Updated File Name" />
	</util:map>
	
	<!-- create-user -->
	<util:map id="createUserTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="user">
			<bean class="org.mule.modules.drupal.model.User">
				<property name="name" value="MuleSoft" />
				<property name="password" value="soft123" />
				<property name="mail" value="mule.soft@mulesoft.com" />
			</bean>
		</entry>
	</util:map>
	
	<!-- delete-user -->
	<util:map id="deleteUserTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="user">
			<bean class="org.mule.modules.drupal.model.User">
				<property name="name" value="MuleSoft" />
				<property name="password" value="soft123" />
				<property name="mail" value="mule.soft@mulesoft.com" />
			</bean>
		</entry>
	</util:map>
	
	<!-- read-user -->
	<util:map id="readUserTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="user">
			<bean class="org.mule.modules.drupal.model.User">
				<property name="name" value="MuleSoft" />
				<property name="password" value="soft123" />
				<property name="mail" value="mule.soft@mulesoft.com" />
			</bean>
		</entry>
	</util:map>
	
	<!-- register-user -->
	<util:map id="registerUserTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="userRef">
			<bean class="org.mule.modules.drupal.model.User">
				<property name="name" value="MuleSoft" />
				<property name="password" value="soft123" />
				<property name="mail" value="mule.soft@mulesoft.com" />
			</bean>
		</entry>
	</util:map>
	
	<!-- update-user -->
	<util:map id="updateUserTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="user">
			<bean class="org.mule.modules.drupal.model.User">
				<property name="name" value="MuleSoft" />
				<property name="password" value="soft123" />
				<property name="mail" value="mule.soft@mulesoft.com" />
			</bean>
		</entry>
		<entry key="updatedUser">
			<bean class="org.mule.modules.drupal.model.User">
				<property name="name" value="Google" />
				<property name="password" value="goog123" />
				<property name="mail" value="goo.gle@google.com" />
			</bean>
		</entry>
	</util:map>
	
	<!-- create-taxonomy-term -->
	<util:map id="createTaxonomyTermTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="taxonomyTerm">
			<bean class="org.mule.modules.drupal.model.TaxonomyTerm">
				<property name="name" value="My Term" />
				<property name="description" value="This is my Taxonomy Term" />
			</bean>
		</entry>
	</util:map>
	
	<!-- create-taxonomy-vocabulary -->
	<util:map id="createTaxonomyVocabularyTestData" map-class="java.util.HashMap" key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="taxonomyVocabulary">
			<bean class="org.mule.modules.drupal.model.TaxonomyVocabulary">
				<property name="name" value="My Vocabulary" />
				<property name="description" value="This is my Taxonomy Vocabulary entry." />
				<property name="machineName" value="createTaxonomyVocabularyEntry" />
			</bean>
		</entry>
	</util:map>
	
	<!-- get-files-for-node -->
	<util:map id="getFilesForNodeTestData" map-class="java.util.HashMap"
		key-type="java.lang.String" value-type="java.lang.Object" scope="prototype">
		<entry key="title" value="My Title" />
		<entry key="content" value="Hello this is the body content" />
		<entry key="type" value="article" />
		<entry key="files">
			<list value-type="java.util.HashMap">
				<map key-type="java.lang.String" value-type="java.lang.Object">
					<entry key="filename" value="First file" />
					<entry key="filepath" value="images.jpg" />
				</map>
				<map>
					<entry key="filename" value="Second file" />
					<entry key="filepath" value="images.jpg" />
				</map>
				<map>
					<entry key="filename" value="Third file" />
					<entry key="filepath" value="images.jpg" />
				</map>
			</list>
		</entry>
	</util:map>
	
</beans>
